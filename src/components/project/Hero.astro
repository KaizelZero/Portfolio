---
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'
import FormattedDate from '@/components/FormattedDate.astro'

interface Props {
  content: CollectionEntry<'projects'>
}

const {
  content: { data, render }
} = Astro.props

const { remarkPluginFrontmatter } = await render()

const dateTimeOptions: Intl.DateTimeFormatOptions = {
  month: 'long'
}
---

{
  data.coverImage && (
    <div class='aspect-h-9 aspect-w-16 mb-6'>
      <Image
        alt={data.coverImage.alt}
        class='rounded-2xl object-cover'
        fetchpriority='high'
        loading='eager'
        src={data.coverImage.src}
      />
    </div>
  )
}
{data.draft ? <span class='text-red-500'>(Draft)</span> : null}
<div class='flex flex-wrap items-center gap-x-3 gap-y-2'>
  <p class='text-xs'>
    <FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} /> /{' '}
    {remarkPluginFrontmatter.minutesRead}
  </p>
</div>
<h1 class='mt-2 text-3xl font-medium sm:mb-1'>
  {data.title}
</h1>
{
  (data.demoURL || data.repoURL) && (
    <nav class='animate flex gap-1'>
      {data.demoURL && (
        <a href={data.demoURL} target='_blank' class='text-lg text-blue-500 hover:underline'>
          demo
        </a>
      )}
      {data.demoURL && data.repoURL && <span class='mx-1 text-lg'>/</span>}
      {data.repoURL && (
        <a href={data.repoURL} target='_blank' class='text-lg text-blue-500 hover:underline'>
          repo
        </a>
      )}
    </nav>
  )
}
